# Standard Chinese Platform - Project Architecture

## Overview
A web-based language learning platform that modernizes the Foreign Service Institute's "Standard Chinese: A Modular Approach" course, featuring a cassette tape vintage aesthetic. Built with SvelteKit, Tailwind CSS, and Supabase.

## Tech Stack
- **Frontend**: SvelteKit 2.16.0, Svelte 5.0.0
- **Styling**: Tailwind CSS 4.0.0
- **Database**: Supabase
- **Authentication**: Supabase Auth
- **Payments**: Stripe 17.7.0
- **API**: SvelteKit endpoints (serverless functions)
- **Email**: EmailJS 4.4.1
- **Deployment**: Vercel (with Vercel adapter 5.6.3)

## Project Structure

### Core Files
- `/app.html` - HTML template with entry point
- `/app.css` - Global CSS styles
- `/package.json` - Project dependencies and scripts
- `/svelte.config.js` - SvelteKit configuration
- `/vite.config.js` - Vite bundler configuration
- `/jsconfig.json` - JavaScript configuration for editor support
- `/vercel.json` - Vercel deployment configuration

### Source Code (/src)
1. **/lib** - Library code and components
   - **/components** - Reusable Svelte components
     - `/AudioPlayer.svelte` - Audio playback for Chinese dialogues
     - `/Auth.svelte` - Authentication component
     - `/CassetteTapeSelector.svelte` - Vintage tape UI for selecting content
     - `/DialogueDisplay.svelte` - Displays dialogue with Chinese text and translations
     - `/ExercisesTab.svelte` - Practice exercises component
     - `/FlashcardDeck.svelte` - Flashcard study system
     - `/ModuleQuestions.svelte` - Questions for module assessment
     - `/ResourceModuleCard.svelte` - Card UI for resource modules
     - `/ReviewTab.svelte` - Review functionality
     - `/Test.svelte` - Test component for development
     - `/UnitContent.svelte` - Content display for learning units
     - `/VocabularyTab.svelte` - Vocabulary learning interface
     
     - **/UI** - Low-level UI components
       - `/Breadcrumb.svelte` - Navigation breadcrumb
       - `/ChineseText.svelte` - Special component for displaying Chinese characters
       - `/ChunkByPinyin.svelte` - Breaks text into pinyin chunks
       - `/ConfirmationModal.svelte` - Confirmation dialog
       - `/FontToggle.svelte` - Toggle between simplified/traditional Chinese
       - `/Header.svelte` - Site header
       - `/Loader.svelte` - Loading indicator
       - `/MobileMenu.svelte` - Responsive mobile navigation menu
       - `/ModuleCard.svelte`, `/UnitCard.svelte` - Cards for modules and units
       - `/ModuleDropdown.svelte`, `/UnitDropdown.svelte` - Dropdown selectors
       - `/NavigationItem.svelte` - Navigation item component
       - `/TabSelector.svelte` - Tab interface component
       - `/TapeConstruction.svelte` - Cassette tape visual element
       - `/Toast.svelte` - Toast notification component
       - `/UnitProgressButton.svelte` - Progress indicator button
       - `/UpgradePrompt.svelte` - Premium subscription prompt
     
     - **/profile** - User profile components
       - `/AccountTab.svelte` - Account settings
       - `/ContextModulesTab.svelte` - Contextual learning modules
       - `/FeedbackTab.svelte` - User feedback interface
       - `/LearningProfileTab.svelte` - Learning preferences
       - `/SubscriptionTab.svelte` - Subscription management
     
     - **/rwp** - "Relevant World Practice" components
       - `/ComprehensionExercise.svelte` - Comprehension practice
       - `/ListeningTab.svelte` - Listening practice
       - `/QuizTab.svelte` - Quiz interface
       - `/StoryTape.svelte` - Story-based learning component
   
   - **/middleware** - Server middleware
     - `/subscriptionCheck.js` - Subscription validation middleware
   
   - **/stores** - Svelte stores for state management
     - `/authStore.js` - Authentication state
     - `/fontPreferences.js` - Chinese character display preferences
     - `/quizStore.js` - Quiz state management
   
   - **/supabase** - Database integration
     - `/client.js` - Supabase client with authentication and data functions
   
   - **/stripe** - Payment processing
     - `/config.js` - Stripe configuration and tier limits
     - `/server.js` - Server-side Stripe functions
   
   - **/rwp** - Relevant World Practice implementation
     - `/rwpGenerator.js` - Generator for personalized practice

   - `/apiClient.js` - Client for API interactions
   - `/index.js` - Library exports
   - `/hooks.server.js` - SvelteKit server hooks

2. **/routes** - SvelteKit routes (pages and API endpoints)
   - `/+layout.svelte` - Root layout for all pages
   - `/+page.svelte` - Home page
   
   - **/api** - Backend API endpoints
     - **/account** - Account management
       - **/delete** - Account deletion endpoint
         - `/+server.js` - Delete account handler
     - **/rwp** - Relevant World Practice API
       - `/analyze-story/+server.js` - Story analysis endpoint
       - `/create-questions/+server.js` - Question generation endpoint
       - `/format-exercise/+server.js` - Exercise formatting endpoint
       - `/generate-story/+server.js` - Story generation endpoint
     - **/stripe** - Payment processing
       - `/create-checkout/+server.js` - Create checkout session
       - `/portal/+server.js` - Customer portal session
       - `/webhook/+server.js` - Stripe webhook handler
     - **/tts** - Text-to-speech API
       - `/+server.js` - TTS endpoint
   
   - **/login** - Authentication routes
     - `/+page.svelte` - Login page
   
   - **/profile** - User profile pages
     - `/+page.server.js` - Server-side profile logic
     - `/+page.svelte` - Profile page
   
   - **/modules** - Learning modules
     - `/+page.svelte` - Modules listing page
     - `/[id]/+page.svelte` - Individual module page
   
   - **/policies** - Policy pages
     - `/+page.svelte` - Policies display
   
   - **/reset-password** - Password reset functionality
     - `/+page.svelte` - Password reset page
   
   - **/resource** - Learning resources
     - `/+page.svelte` - Resources listing
     - `/[id]/+page.js` - Resource data loading
     - `/[id]/+page.svelte` - Individual resource page
     - `/more-info/+page.svelte` - Additional resource information
   
   - **/rwp** - Relevant World Practice pages
     - `/+page.svelte` - RWP home page
     - `/[unit_id]/+layout.js` - Unit-specific layout logic
     - `/[unit_id]/+page.svelte` - Unit-specific RWP page
     - `/demo/+page.svelte` - RWP demo page
   
   - **/units** - Learning units
     - `/[id]/+page.svelte` - Individual unit page

### Static Assets (/static)
- Favicons and app icons
- **/images** - Site images
  - `chinese-calligraphy.jpg`
  - `vintage-cassette.png`
  - `vintage-cassette2.png`
- **/textures** - Background textures
  - `subtle-paper.png`
  - `subtle-paper2.png`

### Database (/supabase)
- `/schema.sql` - Database schema definition

## Authentication & User Management
- Supabase Auth for user authentication
- Email/password authentication
- Password reset functionality
- User profile management
- Account deletion functionality

## Subscription & Payment
- Stripe integration for subscription management
- Two tier system:
  - Free tier: Limited access to RWP (3 per week), no TTS access
  - Premium tier: Enhanced RWP access (20 per day), TTS access (20 per day)
- Customer portal for subscription management
- Stripe webhook handling for subscription events

## Usage Tracking & Limits
- Usage tracking system with reset timers:
  - Daily limits for premium users
  - Weekly limits for free users
- Automatic counter resets based on time
- Upgrade prompts for free users

## Key Features
1. Toggle between simplified/traditional Chinese characters
2. Integrated audio playback for dialogues and exercises
3. LLM integration for personalized practice (Relevant World Practice)
4. Text-to-Speech (TTS) for premium users
5. User accounts with progress tracking
6. Subscription system with free and premium tiers
7. Usage limits and tracking
8. Vintage cassette tape aesthetic UI
9. Mobile-responsive design

## Developer Workflow
- Development: `npm run dev`
- Build: `npm run build`
- Preview production: `npm run preview`
- Code formatting: `npm run format`
- Linting: `npm run lint`